{
	"info": {
		"_postman_id": "1852d56c-4bf4-414d-a5c8-5b208bd5bdc2",
		"name": "Scalez",
		"description": "API for the endpoints of the Scalez app. Currently all of the endpoints are following the \"happy path\", meaning no error cases are currently being handled and everything is assumed to be successful. Once error cases are added, each endpoint will be put into a top level folder, and each error case will be given its own tab.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4324efd-1f01-49e4-bb5a-e2fbf46fc8c5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"response_body_string\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"un\", \"password\": \"pw\", \"firstname\" : \"fn\", \"lastname\" : \"ln\"}"
				},
				"url": {
					"raw": "{{host}}/user/",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						""
					]
				},
				"description": "This request will create a new user. The request body will contain a JSON string containing the username, password, firstname, and lastname of the user. The response body will be raw text containing the username of the user. The response status should be 201 is successful.\n"
			},
			"response": [
				{
					"name": "New User",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"username\": \"un\", \"password\": \"pw\", \"firstname\" : \"fn\", \"lastname\" : \"ln\"}"
						},
						"url": {
							"raw": "{{host}}/user/",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": "\"username\""
				}
			]
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e46bfd34-18d4-4620-9a3b-ce1d2a6ef38a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				},
				"description": "This request will delete a user based of the username in the URL. The response status should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "Change username",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
<<<<<<< HEAD
					"raw": "\"new username\""
=======
					"raw": ""
>>>>>>> 0b0cc7e... update complete audition to a put request
				},
				"url": {
					"raw": "{{host}}/user/{{username}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				},
				"description": "This request will change the username of the user. The old username is specified in the URL and the new username is specified in the request body. The response status should 200 if successful."
			},
			"response": []
		},
		{
			"name": "User login",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/login?username={{username}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"disabled": true
						}
					]
				},
				"description": "This request will login the user based on the request body. The request body will contain a JSON string of the username and password of the user. The response body will contain the username of the user in plain text. The response status should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "User logout",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"logout"
					]
				},
				"description": "This request will log out the user based on the request body. The username of the user is supplied in the URL. The response should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "Get recordings",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/recordings",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"recordings"
					]
				},
				"description": "This request will get all of the user's recordings. The response body will have a JSON string with that contains an array of audio files and an array of timestamps. The response status should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "Get scores",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/scores",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"scores"
					]
				},
				"description": "This request will get all of the user's scores "
			},
			"response": []
		},
		{
			"name": "Score scale",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/recording",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"recording"
					]
				},
				"description": "This request will send an audio file in the request body. This audio file will belong the user. The response body will contain the score. The response status should be 201 if completed."
			},
			"response": []
		},
		{
			"name": "New audition",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition"
					]
				},
				"description": "This request will create a new audition. The request body will contain the username of the auditonee, and the types of scales that should be played."
			},
			"response": []
		},
		{
			"name": "Complete audition",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition/{{auditionID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition",
						"{{auditionID}}"
					]
				},
				"description": "This request will complete an audition. The request body will contain the requested scales from the auditioner. The response status should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "Get audition",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition/{{auditionID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition",
						"{{auditionID}}"
					]
				},
				"description": "This request will get the audition specified by the ID in the URL. The response body should be 200 if successful."
			},
			"response": []
		},
		{
			"name": "Get auditions",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition"
					]
				},
				"description": "This request will get all of the auditions for the specified user. The reponse status should be 200 if successful."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "aa6c7fdf-a0b8-46e0-bcf3-7148c8958580",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d7a80d58-7257-4c88-931e-53c808edc02c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}