{
	"info": {
		"_postman_id": "f81b35a5-5cab-45a6-bd1f-2e376fca9fd7",
		"name": "Scalez",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c003f8b-abfe-4eb0-8f31-b3182422f5ff",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"response_body_string\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"un\", \"password\": \"pw\", \"firstname\" : \"fn\", \"lastname\" : \"ln\"}"
				},
				"url": {
					"raw": "{{host}}/user/",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						""
					]
				},
				"description": "This request will create a new user"
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e46bfd34-18d4-4620-9a3b-ce1d2a6ef38a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user/{{username}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				},
				"description": "This request will delete a user based of the username in the URL"
			},
			"response": []
		},
		{
			"name": "Get recordings",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/recordings",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"recordings"
					]
				},
				"description": "This request will get all of the user's recordings."
			},
			"response": []
		},
		{
			"name": "Get scores",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/scores",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"scores"
					]
				},
				"description": "This request will get all of the user's scores "
			},
			"response": []
		},
		{
			"name": "User login",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					]
				},
				"description": "This request will login the user based on the request body. "
			},
			"response": []
		},
		{
			"name": "User logout",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"logout"
					]
				},
				"description": "This request will log out the user based on the request body. "
			},
			"response": []
		},
		{
			"name": "Change username",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				},
				"description": "This request will change the username of the user. The old username is specified in the URL and the new username is specified in the request body."
			},
			"response": []
		},
		{
			"name": "Score scale",
			"request": {
				"method": "POST",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/recording",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"recording"
					]
				},
				"description": "This request will send an audio file in the request body. This audio file will belong the user. The response body will contain the score. "
			},
			"response": []
		},
		{
			"name": "New audition",
			"request": {
				"method": "POST",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition"
					]
				},
				"description": "This request will create a new audition. The request body will contain the username of the auditonee, and the types of scales that should be played."
			},
			"response": []
		},
		{
			"name": "Complete audition",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition/{{auditionID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition",
						"{{auditionID}}"
					]
				},
				"description": "This request will complete an audition. The request body will contain the requested scales from the auditioner. "
			},
			"response": []
		},
		{
			"name": "Get audition",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition/{{auditionID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition",
						"{{auditionID}}"
					]
				},
				"description": "This request will get the audition specified by the ID in the URL"
			},
			"response": []
		},
		{
			"name": "Get auditions",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/user/{{username}}/audition",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{username}}",
						"audition"
					]
				},
				"description": "This request will get all of the auditions for the specified user."
			},
			"response": []
		}
	]
}